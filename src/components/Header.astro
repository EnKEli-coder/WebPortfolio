---
const navItems = [
  {
    title: "Home",
    label: "presentation",
    url: "/#presentation",
  },
  {
    title: "Experience",
    label: "experience",
    url: "/#experience",
  },
  {
    title: "Projects",
    label: "projects",
    url: "/#projects",
  },
  {
    title: "About me",
    label: "about-me",
    url: "/#about-me",
  },
]

---


<header class="flex text-white mx-auto w-fit text-base fixed z-10 mx-auto mt-2 w-full justify-center">
  <nav class="flex gap-6 py-2 px-3 rounded-full">
    {
      navItems.map(item => (
      <a href={item.url} aria-label={item.label}>
        {item.title}
      </a>
      ))
    }
    
  </nav>
</header>

<script>
  const sections = document.querySelectorAll("section")
  const navItems = document.querySelectorAll("header nav a")

  const highlightCurrentNav = (entries: any[]) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("aria-label") == entry.target.id) {
              item.classList.add("text-primary")
            } else {
              item.classList.remove("text-primary")
            }
          })
        }
    })
  }

  const intersectionObserver = new IntersectionObserver(highlightCurrentNav, {
    root: null,
    rootMargin: "0px",
    threshold: 0.3,
  })

  sections.forEach(section => {
    intersectionObserver.observe(section)
  })

  document.onvisibilitychange = () => {
    if (document.visibilityState === "hidden") {
      intersectionObserver.disconnect()
    } else {
      sections.forEach((section) => {
        intersectionObserver.observe(section)
      })
    }
  }
</script>

<style>
  nav {
    animation: nav-shadown 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
  }

  @keyframes nav-shadown {
    to {
      @apply shadow-lg ring-1 backdrop-blur dark:bg-gray-800/90 bg-white/50 ring-white/10;
    }
  }
</style>